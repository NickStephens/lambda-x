CONCRETE SYNTAX FOR PCONS

Script -> (Def | Exp)+

Def -> LETF | LETREC

LETF   ->  Name {Arg} '=' Exp 
LETREC -> 'Letrec' Name {Arg} '=' Exp

------------------------------------------

Exp -> App | Lam | Var | Let | Case | Name | (Exp) |
		Numeric | List | IfThen | Boolean | Value

Arg -> Exp

App -> Exp Exp

Lam -> 'L' Var '.' Exp

Var -> Name

Let -> 'Let' Binding 'in' Exp

Binding -> Name '=' Exp

Case -> 'Case' Exp 'of' {Exp '->' Exp}

Value -> Int | Char | Bool

IfThen -> 'If' Boolean 'Then' Exp 'Else' Exp

Bool -> True | False

Boolean -> Boolean BoolOp Boolean | 'Not' Boolean

BoolOp -> '||' | '&&' | '=='

List -> [{Value ','} Value] | [] | 'CAR' List | 'CDR' List | 'CONS' Value List

Numeric -> Int | Int Oper Int

Int -> ['-'] Num

Num -> { '1' | '2' ... | '9' | '0' }

Char -> ( 'a' | 'b' .. | 'Y' | 'Z' )

Oper -> '+' | '-' | '*' | '/' |
		'>' | '<' | '==' | '<=' | '>='

==========================================

Name -> Uppercase followed by any number of alphanumerics




